<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="seekurjr" >

	<!--Inertial macros for the box and cylinder. Units are kg*m^2-->
	<xacro:macro name="box_inertial" params="x y z mass">
		<inertial>
		<mass value="${mass}" />
		<origin xyz="0 0 0" />
		<inertia  ixx="${mass*(y*y+z*z)/12}" ixy = "0" ixz = "0"
		          iyy="${mass*(x*x+z*z)/12}" iyz = "0"
		          izz="${mass*(x*x+z*z)/12}" /> 
		</inertial>
	</xacro:macro>
  
	<xacro:macro name="cylinder_inertial" params="mass r h">
		<inertial>
		<mass value="${mass}" />
		<origin xyz="0 0 0" />
		 <inertia  ixx="${mass*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
		          iyy="${mass*(3*r*r+h*h)/12}" iyz = "0"
		          izz="${mass*r*r/2}" /> 
		</inertial>
	</xacro:macro>
  
  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>
  
  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  
	<joint name="base_footprint_joint" type="fixed">
		<!-- NB: While you would think this would make it go up, it is oddly reversed.
		This moves the joint to 0,0,0 where we want it for rviz, etc. 
		origin xyz="0 0 ${base_size_z/2 + 0.051}" rpy="0 0 0"
		origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0"
		-->
		<origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
		<parent link="base_footprint"/>
		<child link="base_link" />
	</joint>

<!-- BASE_LINK (RED) -->
<link name="base_link">
	<box_inertial  mass="${base_mass}" x="${base_x_size}" y="${base_y_size}" z="${base_z_size}"/> 
	<visual>	
		<origin xyz="0 0 0" rpy="${M_PI/2} 0 ${M_PI/2}" />
		<geometry>
			<mesh filename="package://seekurjr_gazebo/meshes/seekurjr_body_new_low2.dae" scale="1 1 1"/>
		</geometry>
	</visual>
	<collision>
	<!--
		<origin xyz="0 0 0" rpy="${M_PI/2} 0 ${M_PI/2}" />
		<geometry>
			<mesh filename="package://seekurjr_gazebo/meshes/seekurjr_body_new_low2.stl" scale="1 1 1"/>
		</geometry>
	-->
	<origin xyz="0 0 ${ground_clearance+0.1}" rpy="0 0 0"/>
	     <geometry>
            <box size ="${base_x_size} ${base_y_size} ${base_z_size}"/>
        </geometry>

	</collision>
</link>

<xacro:macro name="wheel" params="fb lr parent translateX translateY flipY">

	<link name="${fb}_${lr}_wheel">
		<cylinder_inertial  mass="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
		
		<visual>
		    <origin xyz="0 0 0" rpy="${flipY*M_PI/2} 0 0"/>
		    <geometry>
			<mesh filename="package://seekurjr_gazebo/meshes/seekurjr_left_side_wheel.stl" scale="1 1 1"/>
		    </geometry>
			<material name="DarkGray" />
		</visual>
		<collision> 
			<origin xyz="0 ${translateY*-0.02} 0" rpy="${M_PI/2} 0 0"/>
			<geometry>
			  <!--<cylinder length="${0.1651-0.0051}" radius="${0.2032-0.0052}"/>-->
			  <cylinder length="${wheel_height/2}" radius="${wheel_radius}" />
			  <!--<sphere radius="${wheel_radius-0.05}"/>-->
			</geometry>
		</collision>   
	</link>
	
	<joint name="${fb}_${lr}_wheel_joint" type="continuous">
		<origin xyz="${translateX * base_x_origin_to_wheel_origin} ${translateY * base_y_origin_to_wheel_origin} ${base_z_origin_to_wheel_origin}" rpy="0 0 0"/>
		<parent link="${parent}"/>
		<child link="${fb}_${lr}_wheel"/>
		<axis xyz="0 1 0" rpy="0 0 0" />
		<limit effort="100" velocity="100"/>
		<joint_properties damping="0.0" friction="0.0"/>
		<!--<dynamics damping="1.0" friction="0.0" />-->
		<!--<limit effort="30" velocity="1.0"  lower="-100" upper="100" />-->
	</joint>	
	
    <gazebo reference="${fb}_${lr}_wheel">
		<kp>1.0e+7</kp>
		<kd>10.0</kd>   
		<mu1>${mu1}</mu1>
		<mu2>${mu2}</mu2>
		<!--<fdir1>0 1 0</fdir1>
		<maxVel>1.0</maxVel>-->
		<minDepth>0.001</minDepth>
		<maxContacts>1</maxContacts>
		<fdir1 value="1 0 0"/>
		<material>Gazebo/Grey</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<!-- Transmission is important to link the joints and the controller -->
    <transmission name="${fb}_${lr}_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${fb}_${lr}_wheel_joint" />
      <actuator name="${fb}_${lr}_wheel_joint_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
</xacro:macro>

  <!-- WHEELs -->
  <wheel fb="front" lr="right" parent="base_link" translateX="1" translateY="-1" flipY="-2"/>
  <wheel fb="front" lr="left" parent="base_link" translateX="1" translateY="1" flipY="0"/>
  <wheel fb="back" lr="right" parent="base_link" translateX="-1" translateY="-1" flipY="-2"/>
  <wheel fb="back" lr="left" parent="base_link" translateX="-1" translateY="1" flipY="0"/>


<gazebo>

  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">

<!--
   <plugin name="skid_steer_drive_controller" filename="libdiffdrive_plugin_multi_wheel.so">
   <leftJoints>front_left_wheel_joint back_left_wheel_joint</leftJoints>
   <rightJoints>front_right_wheel_joint back_right_wheel_joint</rightJoints>
   <publishOdometryTf>0</publishOdometryTf>
-->
	<rosDebugLevel>Debug</rosDebugLevel>
<!--    <robotNamespace>/seekurjr</robotNamespace>-->
     <publishWheelTF>false</publishWheelTF>
	<publishWheelJointState>true</publishWheelJointState>
	
	<alwaysOn>true</alwaysOn>
	
    <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
    <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
    <leftRearJoint>back_left_wheel_joint</leftRearJoint>
    <rightRearJoint>back_right_wheel_joint</rightRearJoint>

    <wheelSeparation>${wheel_separation}</wheelSeparation>
    <wheelDiameter>${wheel_diameter}</wheelDiameter>
    
    <max_force>${70*9.8}</max_force>
    <torque>${70*9.8}</torque>
    <wheelTorque>${70*9.8}</wheelTorque>
    <wheelAcceleration>${1.8*2}</wheelAcceleration>

    <commandTopic>cmd_vel</commandTopic>
    
    <odometryTopic>odom_raw</odometryTopic>
    <odometryFrame>odom</odometryFrame>

    <broadcastTF>0</broadcastTF>

    <odometrySource>world</odometrySource>
	<robotBaseFrame>base_footprint</robotBaseFrame>
    <updateRate>100.0</updateRate>
  </plugin>
</gazebo>

	
	<gazebo>
		<plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d">
		<bodyName>base_link</bodyName>
		<topicName>/ground_truth/state</topicName>
		<alwaysOn>true</alwaysOn>
		<updateRate>100.0</updateRate>
		</plugin>
	</gazebo>

  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <!--<robotNamespace>/seekurjr</robotNamespace>-->
      <robotParam>seekurjr_description</robotParam>
    </plugin>
  </gazebo>

</robot>
